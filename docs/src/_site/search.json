[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Villard",
    "section": "",
    "text": "Maybe you will like this. Villard manages your data science pipelines. Split a big project into smaller discrete steps for a maintainable and reproducible workflow. Perhaps you don’t even need to your existing code too much."
  },
  {
    "objectID": "installation.html",
    "href": "installation.html",
    "title": "Installation",
    "section": "",
    "text": "pip install git+https://github.com/ariaghora/villard"
  },
  {
    "objectID": "quickstart.html",
    "href": "quickstart.html",
    "title": "Getting started",
    "section": "",
    "text": "Hello world pipeline\nFor our first example, let’s consider the following simple pipeline:\n\n\n\n\nflowchart LR\n    get_name --> greet;\n\n\n\n\n\n\n\n\nVillard is all about pipeline orchestration. It is designed to cope with frequent pipeline changes. All pipeline definitions and changes are made in configuration files. Let’s create one. In your project folder, create a config.yml file. At very least, a configuration file must contain a pipeline_definition section, and that section must contain _default key.\nnode_implementation_modules:\n    - implementation\n\npipeline_definition:\n    _default:\n        combine_name:\n            first_name: \"John\"\n            last_name: \"Doe\"\n        greet:\n            name: \"ref::combine_name\"\nIt also accommodates multiple pipelines, so you may add more definitions other than _default.\nThe combine_name node will take the values of first_name and last_name. This node will output a string that is the concatenation of both names. The output of combine_name is then passed to greet node to be displayed. Note that the name value of greet node is ref::combine_name. It means that the greet node refers to the output of combine_name node (which is the concatenation names).\nThen we make the pipeline nodes’ implementation in implementation.py.\nfrom villard import V\n\n@V.node(\"combine_name\")\ndef combine_name(first_name, last_name):\n    return first_name + \" \" + last_name\n\n@V.node(\"greet\")\ndef greet(name):\n    print (\"Hello, \" + name + \"!\")\nNow execute the pipeline by invoking following command:\n$ villard run config.yml"
  }
]